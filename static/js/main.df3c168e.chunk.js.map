{"version":3,"sources":["flux/actions/types.js","flux/reducers/BoardReducer.js","flux/reducers/index.js","flux/store.js","components/Task.js","flux/actions/BoardActions.js","components/AddTask.js","components/Board.js","components/AddBoard.js","components/Kanban.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE_BOARD","RENAME_BOARD","DELETE_BOARD","CLEAR_BOARD","CREATE_TASK","EDIT_TASK","DELETE_TASK","TRANSFER_TASK","initialState","boards","id","uuidv4","name","tasks","title","combineReducers","board","state","action","type","payload","map","boardId","Object","assign","newName","filter","task","newTitle","transTask","prevBoardId","newBoardId","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Task","handleDelete","props","deleteTask","boardid","handleEdit","oldTitle","a","Swal","fire","input","inputLabel","inputPlaceholder","showCancelButton","inputValidator","value","editTask","this","connectDragSource","isDragging","src","style","styles","TaskStyle","Card","Body","ButtonGroup","float","size","Button","variant","onClick","bind","Component","marginTop","marginBottom","DragSource","beginDrag","monitor","prevBoard","connect","dragSource","dispatch","AddTask","isCreateTask","newTaskName","boardID","handleClick","setState","handleSubmit","e","preventDefault","createTask","handleChange","target","handleCancel","onSubmit","className","placeholder","onChange","required","block","Board","handleChangeName","oldName","renameBoard","handleClear","clearBoard","deleteBoard","column","connectDropTarget","Header","Footer","DropTarget","drop","component","item","getItem","transferTask","dropTarget","oldTask","AddBoard","isCreateBoard","newBoardName","createBoard","Kanban","DndProvider","backend","HTML5Backend","Row","Col","md","ColumnStyle","length","Alert","App","mainContentStyle","Container","fluid","paddingLeft","paddingRight","minHeight","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df3c168e.chunk.js","sourcesContent":["//BOARD ACTIONS\nexport const CREATE_BOARD = 'CREATE_BOARD';\nexport const RENAME_BOARD = 'RENAME_BOARD';\nexport const DELETE_BOARD = 'DELETE_BOARD';\nexport const CLEAR_BOARD = 'CLEAR_BOARD';\n\n//TASK ACTIONS\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const TRANSFER_TASK = 'TRANSFER_TASK ';","import { CREATE_BOARD, RENAME_BOARD, DELETE_BOARD , CLEAR_BOARD, CREATE_TASK, EDIT_TASK, DELETE_TASK, TRANSFER_TASK} from '../actions/types';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Board Schema {id: uuidv4(), name: 'TO DO', tasks: []}\n// Task Schema {id: uuidv4(), title: 'Add Button'}\n\nconst initialState = {\n    boards: [\n        {id: uuidv4(), name: 'TO DO', tasks: [{id: uuidv4(), title: 'Add Button'}, {id: uuidv4(), title: 'Add ToolTip'}]},\n        {id: uuidv4(), name: 'NOW', tasks: [{id: uuidv4(), title: 'Add Header'}, {id: uuidv4(), title: 'Add Footer'}]}],\n}\n\nexport default function Reducer( state=initialState, action ) {\n    switch (action.type) {\n        case CREATE_BOARD:\n            return {\n                ...state,\n                boards: [...state.boards, action.payload]\n            };\n\n        case RENAME_BOARD:\n            return {\n                ...state,\n                boards: state.boards.map(board => board.id === action.payload.boardId\n                    ? Object.assign(board, {name: action.payload.newName})\n                    : board )\n            };\n\n        case DELETE_BOARD:\n            return {\n                ...state,\n                boards: [...state.boards.filter(board => board.id !== action.payload)]\n            };\n\n        case CLEAR_BOARD:\n            return {\n                ...state,\n                boards: state.boards.map(board => board.id === action.payload\n                    ? Object.assign(board, {tasks: []})\n                    : board )\n            };\n\n        case CREATE_TASK:\n            return {\n                ...state,\n                boards: state.boards.map(board => board.id === action.payload.boardId\n                    ? Object.assign(board, {tasks: [...board.tasks, {id: action.payload.id, title: action.payload.title} ]})\n                    : board )\n            };\n\n        case EDIT_TASK:\n            return {\n                ...state,\n                boards: state.boards.map(board => board.id === action.payload.boardId\n                    ? Object.assign(board, {tasks: [...board.tasks.filter(task => task.id === action.payload.id ?\n                        Object.assign(task, {title: action.payload.newTitle})\n                        : task ) ]})\n                    : board ),\n            };\n\n\n        case DELETE_TASK:\n            return {\n                ...state,\n                boards: state.boards.map(board => board.id === action.payload.boardId\n                    ? Object.assign(board, {tasks: [...board.tasks.filter(task => task.id !== action.payload.id) ]})\n                    : board )\n            };\n\n        case TRANSFER_TASK:\n            const {transTask, prevBoardId, newBoardId} = action.payload\n            if (prevBoardId === newBoardId){\n                return state;\n            }\n\n            return{\n                ...state,\n                // Delete from previos board\n                boards: state.boards.map(board => board.id === prevBoardId\n                    ? Object.assign(board, {tasks: [...board.tasks.filter(task => task.id !== transTask.id) ]})\n                    : board ),\n                // Add to new board\n                boards: state.boards.map(board => board.id === newBoardId\n                    ? Object.assign(board, {tasks: [...board.tasks, {id: transTask.id, title: transTask.title} ]})\n                    : board )\n                }\n            \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport BoardReducer from './BoardReducer'\n\nexport default combineReducers({\n    board: BoardReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleware)\n));\n\nexport default store;","import React, { Component } from 'react';\nimport {Card, Button, ButtonGroup} from 'react-bootstrap';\nimport {Trash, Eraser} from 'react-bootstrap-icons';\nimport {connect} from 'react-redux';\nimport{ deleteTask, editTask } from '../flux/actions/BoardActions';\nimport Swal from 'sweetalert2';\nimport { DragSource } from 'react-dnd';\n\nconst Types = {\n    ITEM: 'task'\n}\n\nconst itemSource = {\n    beginDrag(props, monitor) {\n        const droppedTask = {task: props.task, prevBoard: props.boardid}\n        return droppedTask \n    }\n}\n\nfunction collect(connect, monitor) {\n    return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n    }\n}\n\nclass Task extends Component {\n    handleDelete = (id) => {\n        this.props.deleteTask(id, this.props.boardid)\n    }\n\n    handleEdit = async(id, oldTitle) => {\n        const { value: title } = await Swal.fire({\n            title: 'Input new title',\n            input: 'text',\n            inputLabel: `New title for task: ${oldTitle}`,\n            inputPlaceholder: 'Task Title',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                return !value && 'You need to write something!'\n            }\n        })\n        if(title){\n            this.props.editTask(id, this.props.boardid, title)\n        }\n    }\n\n    render() {\n        const {id, title} =this.props.task\n\n        const { isDragging, connectDragSource, src } = this.props\n\n        return connectDragSource(\n            <div style={styles.TaskStyle}>\n                <Card>\n                    <Card.Body>\n                        {title}\n                        <ButtonGroup style={{float: 'right'}} size=\"sm\">\n                            <Button variant=\"success\" onClick={this.handleEdit.bind(this, id, title)}><Eraser/></Button>\n                            <Button variant=\"danger\" onClick={this.handleDelete.bind(this, id)}><Trash/></Button>\n                        </ButtonGroup>\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    TaskStyle: {\n        // opacity: isDragging ? 0.5 : 1,\n        marginTop: '1vh',\n        marginBottom: '1vh',\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n})\n\nTask = DragSource(Types.ITEM, itemSource, collect)(Task)\nexport default connect(mapStateToProps, {deleteTask, editTask})(Task)","import { CREATE_BOARD, RENAME_BOARD, DELETE_BOARD, CLEAR_BOARD, CREATE_TASK, EDIT_TASK, DELETE_TASK, TRANSFER_TASK} from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const createBoard = (name) => dispatch => {\n    const board = {\n        id: uuidv4(),\n        name,\n        tasks: []\n    }\n    dispatch({type: CREATE_BOARD, payload: board})\n}\n\nexport const renameBoard = (boardId ,newName) => dispatch => {\n    const board = {\n        boardId,\n        newName,\n    }\n    dispatch({type: RENAME_BOARD, payload: board})\n}\n\nexport const clearBoard = (boardId) => dispatch => {\n    dispatch({type: CLEAR_BOARD, payload: boardId})\n}\n\nexport const deleteBoard = (boardId) => dispatch => {\n    dispatch({type: DELETE_BOARD, payload: boardId})\n}\n\nexport const createTask = (boardId, title) => dispatch => {\n    const task = {\n        id: uuidv4(),\n        title,\n        boardId\n    }\n    dispatch({type: CREATE_TASK, payload: task})\n}\n\nexport const editTask = (id, boardId, newTitle) => dispatch => {\n    const task = {\n        id,\n        boardId,\n        newTitle\n    }\n    dispatch({type: EDIT_TASK, payload: task})\n}\n\nexport const deleteTask = (id, boardId) => dispatch => {\n    const task = {\n        id,\n        boardId\n    }\n    dispatch({type: DELETE_TASK, payload: task})\n}\n\nexport const transferTask = (oldTask, newBoardId) => dispatch => {\n    const transferTask = {\n        transTask: oldTask.task,\n        prevBoardId: oldTask.prevBoard,\n        newBoardId\n    }\n    dispatch({type: TRANSFER_TASK, payload: transferTask})\n}","import React, { Component } from 'react';\nimport { Button} from 'react-bootstrap';\nimport {createTask} from '../flux/actions/BoardActions';\nimport {connect} from 'react-redux'\n\nclass AddTask extends Component {\n    state = {\n        isCreateTask: false,\n        newTaskName: \"\",\n        boardID: this.props.boardid\n    }\n\n    handleClick = () => {\n        this.setState({isCreateTask: true})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createTask(this.state.boardID, this.state.newTaskName);\n        this.setState({newTaskName: \"\"})\n        this.setState({isCreateTask: false})\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name] : e.target.value })\n    }\n\n    handleCancel = () => {\n        this.setState({newTaskName: \"\"})\n        this.setState({isCreateTask: false})\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.isCreateTask? \n                <div><Button onClick={this.handleClick} block>Add Task</Button></div>:\n                    <form  onSubmit={this.handleSubmit} >\n                        <div className=\"mb-3\">\n                            <label className=\"form-label font-weight-bold\" >Name:</label>\n                            <input \n                                    type = \"text\"\n                                    name = \"newTaskName\"\n                                    className=\"form-control\"\n                                    placeholder = \"Add the Title ...\"\n                                    value = {this.state.newTaskName}\n                                    onChange = { this.handleChange }\n                                    required\n                                />\n                        </div>\n                        <Button variant=\"danger\" onClick={this.handleCancel} style={{float: 'left'}}>Cancel</Button>\n                        <Button variant=\"primary\" type=\"submit\" style={{float: 'right'}}>Add</Button>\n\n                    </form>\n\n            }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n})\n\nexport default connect(mapStateToProps, {createTask})(AddTask)","import React, { Component } from 'react';\nimport { Card, Button, ButtonGroup } from 'react-bootstrap';\nimport Task from './Task';\nimport {connect} from 'react-redux';\nimport{ renameBoard, deleteBoard, clearBoard, transferTask } from '../flux/actions/BoardActions'\nimport {Trash, Eraser, FileEarmarkMinus} from 'react-bootstrap-icons';\nimport Swal from 'sweetalert2'\nimport AddTask from './AddTask'\nimport { DropTarget } from 'react-dnd'\n\nconst Types = {\n    ITEM: 'task'\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget()\n    }\n}   \n\n\nclass Board extends Component {\n    handleChangeName = async(id,oldName) => {\n        const { value: name } = await Swal.fire({\n            title: 'Input new name',\n            input: 'text',\n            inputLabel: `New name for board: ${oldName}`,\n            inputPlaceholder: 'Board Name',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                return !value && 'You need to write something!'\n            }\n        })\n\n        if (name) {\n            this.props.renameBoard(id, name)\n        }\n    }\n\n    handleClear = (id) => {\n        this.props.clearBoard(id)\n    }\n\n    handleDelete = (id) => {\n        this.props.deleteBoard(id)\n    }\n\n    render() {\n        const {id, name, tasks} =this.props.column\n        const { connectDropTarget } = this.props\n        // console.log(connectDropTarget)\n\n        return connectDropTarget(\n            <div style={this.props.style}>\n                <Card>\n                    <Card.Header>\n                        <strong>{name}</strong>\n                        <ButtonGroup style={{float: 'right'}}>\n                            <Button variant=\"success\" onClick={this.handleChangeName.bind(this, id, name)}><Eraser/></Button>\n                            <Button variant=\"primary\" onClick={this.handleClear.bind(this, id)}><FileEarmarkMinus/></Button>\n                            <Button variant=\"danger\" onClick={this.handleDelete.bind(this, id)}><Trash/></Button>\n                        </ButtonGroup>\n                        \n                    </Card.Header>\n                    <Card.Body>\n                    {tasks.map( task => (<Task key={task.id} task={task}  boardid={id}/>))}\n                    </Card.Body>\n                    <Card.Footer>\n                        <AddTask boardid={id}/>\n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n})\n\nconst spec = {\n    drop(props, monitor, component){\n        const item = monitor.getItem()\n        props.transferTask(item, props.column.id)\n        return item;\n        \n    }\n}\n\nBoard = DropTarget(Types.ITEM, spec, collect)(Board)\nexport default connect(mapStateToProps, {renameBoard, clearBoard, deleteBoard, transferTask})(Board)","import React, { Component } from 'react';\nimport { Button, Card} from 'react-bootstrap';\nimport {createBoard} from '../flux/actions/BoardActions';\nimport {connect} from 'react-redux'\n\nclass AddBoard extends Component {\n    state = {\n        isCreateBoard: false,\n        newBoardName: \"\"\n    }\n\n    handleClick = () => {\n        this.setState({isCreateBoard: true})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createBoard(this.state.newBoardName);\n        this.setState({newBoardName: \"\"})\n        this.setState({isCreateBoard: false})\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name] : e.target.value })\n    }\n\n    handleCancel = () => {\n        this.setState({newBoardName: \"\"})\n        this.setState({isCreateBoard: false})\n    }\n\n    render() {\n        return (\n            <div style={this.props.style}>\n            {!this.state.isCreateBoard? \n                <div><Button onClick={this.handleClick} size=\"lg\" block>Add Board</Button></div>:\n                <Card><Card.Body>\n                    <form  onSubmit={this.handleSubmit} >\n                        <div className=\"mb-3\">\n                            <label className=\"form-label font-weight-bold\" >Name:</label>\n                            <input \n                                    type = \"text\"\n                                    name = \"newBoardName\"\n                                    className=\"form-control\"\n                                    placeholder = \"Add the name ...\"\n                                    value = {this.state.newBoardName}\n                                    onChange = { this.handleChange }\n                                    required\n                                />\n                        </div>\n                        <Button variant=\"danger\" onClick={this.handleCancel} style={{float: 'left'}}>Cancel</Button>\n                        <Button variant=\"primary\" type=\"submit\" style={{float: 'right'}}>Add</Button>\n\n                    </form>\n                    </Card.Body></Card>\n            }\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n})\n\nexport default connect(mapStateToProps, {createBoard})(AddBoard)","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Board from './Board';\nimport AddBoard from './AddBoard';\nimport {Row, Col, Alert} from 'react-bootstrap';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nclass Kanban extends Component {\n    render() {\n        const {boards} = this.props.board\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Row>\n                    {boards.map( board => (<Col md={3}><Board key={board.id} column={board} style={styles.ColumnStyle}/></Col>))}\n                    {boards.length < 5? <Col md={3}><AddBoard style={styles.ColumnStyle}/></Col>:\n                    <Col md={3}><Alert variant=\"info\" style={styles.ColumnStyle}>Amount of boards exceeded</Alert></Col>\n                    }\n                </Row>\n            </DndProvider>\n        )\n    }\n}\n\nconst styles = {\n    ColumnStyle: {\n        marginTop: '2vh',\n        marginBottom: '2vh',\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    board: state.board\n})\n\nexport default connect(mapStateToProps, {})(Kanban)","import React, {Component} from 'react';\nimport { Provider } from 'react-redux';\nimport store from './flux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Kanban from './components/Kanban';\n\nimport {Container} from 'react-bootstrap'\n\nclass App extends Component {\n  render(){\n    return(\n      <Provider store={store}>\n        <div style={styles.mainContentStyle}>\n          <Container fluid>\n            <h3>Kanban Clone</h3>\n            <Kanban />\n          </Container>\n        </div>\n      </Provider>\n    )\n  }\n}\n\n\nconst styles = {\n  mainContentStyle: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    minHeight: '100vh',\n    background: '#ECECEC'\n  },\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}